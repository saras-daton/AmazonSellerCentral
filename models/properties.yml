version: 2
models:
  - name: ListOrder
    description: A list orders along with the customer details
    config:
      materialized: incremental
      incremental_strategy: merge
      unique_key: ['PurchaseDate','amazonorderid','marketplaceName']
      partition_by: { 'field': 'PurchaseDate', 'data_type': 'timestamp', 'granularity': 'day' }
      cluster_by: ['amazonorderid']

  - name: FBAManageInventoryHealthReport
    description: A detailed report which gives details about inventory age , current inventory levels, recommended inventory levels
    config:
      materialized: incremental
      incremental_strategy: merge
      unique_key: ['snapshot_date','asin','sku','marketplaceId']
      partition_by: { 'field': 'snapshot_date', 'data_type': 'date' }
      cluster_by: ['asin','sku']

  - name: FBAManageInventory
    description: A list of ad groups associated with the accountA report which gives details about inventory movement - inbound, outbound, sellable
    config:
      materialized: incremental
      incremental_strategy: merge
      unique_key: ['ReportstartDate','sku','marketplaceId']
      partition_by: { 'field': 'ReportstartDate','data_type':'timestamp','granularity': 'day' }
      cluster_by: ['sku']

  - name: InventoryLedgerDetailedReport
    description: A report about available quantity at the warehouse level
    config:
      materialized: incremental
      incremental_strategy: merge
      unique_key: ['date','asin','fulfillment_center','msku', 'event_type', 'reference_id','quantity','disposition','marketplaceid']
      partition_by: { 'field': 'date', 'data_type': 'timestamp', 'granularity': 'day' }
      cluster_by: ['date','msku']

  - name: ListFinancialEventsOrderFees
    description: A list of fees associated with the shipment item.
    config:
      materialized: incremental
      incremental_strategy: merge
      unique_key: ['posteddate', 'marketplacename', 'amazonorderid', 'FeeType','_seq_id']
      partition_by: { 'field': 'posteddate', 'data_type': 'date' }
      cluster_by: ['marketplacename', 'amazonorderid']

  - name: ListFinancialEventsOrderPromotions
    description: A list of promotions which gives the amount of promotional discount applied to the item at an item & order level.
    config:
      materialized: incremental
      incremental_strategy: merge
      unique_key: ['posteddate', 'marketplacename', 'amazonorderid', 'PromotionType','_seq_id']
      partition_by: { 'field': 'posteddate', 'data_type': 'date' }
      cluster_by: ['marketplacename', 'amazonorderid']

  - name: ListFinancialEventsOrderRevenue
    description: A list of shipment items which includes order & product level revenue
    config:
      materialized: incremental
      incremental_strategy: merge
      unique_key: ['posteddate', 'marketplacename', 'amazonorderid', 'ChargeType','_seq_id']
      partition_by: { 'field': 'posteddate', 'data_type': 'date' }
      cluster_by: ['marketplacename', 'amazonorderid']

  - name: ListFinancialEventsOrderTaxes
    description: A list of order taxes
    config:
      materialized: incremental
      incremental_strategy: merge
      unique_key: ['posteddate', 'marketplacename', 'amazonorderid', 'ChargeType','_seq_id']
      partition_by: { 'field': 'posteddate', 'data_type': 'date' }
      cluster_by: ['marketplacename', 'amazonorderid']

  - name: ListFinancialEventsRefundFees
    description: A list of fees associated with the refunded item.
    config:
      materialized: incremental
      incremental_strategy: merge
      unique_key: ['posteddate', 'marketplacename', 'amazonorderid', 'FeeType', '_seq_id']
      partition_by: { 'field': 'posteddate', 'data_type': 'date' }
      cluster_by: ['marketplacename', 'amazonorderid']

  - name: ListFinancialEventsRefundPromotions
    description: A list of promotions which gives the amount of promotional discount applied to the item at an refunded item level.
    config:
      materialized: incremental
      incremental_strategy: merge
      unique_key: ['posteddate', 'marketplacename', 'amazonorderid', 'PromotionType', '_seq_id']
      partition_by: { 'field': 'posteddate', 'data_type': 'date' }
      cluster_by: ['marketplacename', 'amazonorderid']

  - name: ListFinancialEventsRefundRevenue
    description: A list of refunded items which includes refund & product level revenue
    config:
      materialized: incremental
      incremental_strategy: merge
      unique_key: ['posteddate', 'marketplacename', 'amazonorderid', 'ChargeType', '_seq_id']
      partition_by: { 'field': 'posteddate', 'data_type': 'date' }
      cluster_by: ['marketplacename', 'amazonorderid']

  - name: ListFinancialEventsRefundTaxes
    description: A list of refund taxes
    config:
      materialized: incremental
      incremental_strategy: merge
      unique_key: ['posteddate', 'marketplacename', 'amazonorderid', 'ChargeType', '_seq_id']
      partition_by: { 'field': 'posteddate', 'data_type': 'date' }
      cluster_by: ['marketplacename', 'amazonorderid']

  - name: CatalogItems
    description: A list of product summary, manufacturer & dimensions
    config:
      materialized: incremental
      incremental_strategy: merge
      cluster_by: ['ReferenceASIN']
      partition_by: { 'field': 'RequestStartDate', 'data_type': 'timestamp', 'granularity': 'day' }
      unique_key: ['brandName','ReferenceASIN','modelNumber','summaries_marketplaceId']

  - name: CatalogItemsSummary
    description: A list of product summary, manufacturer & dimensions
    config:
      materialized: incremental
      incremental_strategy: merge
      cluster_by: ['ReferenceASIN']
      partition_by: { 'field': 'RequestStartDate', 'data_type': 'timestamp', 'granularity': 'day' }
      unique_key: ['brandName','ReferenceASIN','modelNumber','marketplaceId']

  - name: AllListingsReport
    description: A listing report with details about all types of listings
    config:
      materialized: incremental
      incremental_strategy: merge
      cluster_by: ['seller_sku']
      unique_key: ['seller_sku','listing_id']

  - name: FBAReturnsReport
    description: Returns report of the orders fulfilled by Amazon
    config:
      materialized: incremental
      incremental_strategy: merge
      unique_key: ['return_date','asin','sku','order_id','fnsku','license_plate_number','fulfillment_center_id','_seq_id','marketplaceId']
      partition_by: { 'field': 'return_date', 'data_type': 'date' }
      cluster_by: ['asin','sku']

  - name: FlatFileReturnsReportByReturnDate
    description: Returns report of the orders fulfilled by Merchant
    config:
      materialized: incremental
      incremental_strategy: merge
      unique_key: ['Return_request_date', 'Order_ID', 'ASIN','marketplaceId']
      partition_by: { 'field': 'Return_request_date', 'data_type': 'date' }
      cluster_by: ['ASIN','Merchant_SKU', 'Order_ID']

  - name: FBAAmazonFulfilledShipmentsReport
    description: Orders report with shipment details included
    config:
      materialized: incremental
      incremental_strategy: merge
      unique_key: ['purchase_date', 'sku', 'amazon_order_id','marketplaceName','_seq_id']
      partition_by: { 'field': 'purchase_date', 'data_type': 'timestamp', 'granularity': 'day' }
      cluster_by: ['sku','amazon_order_id']

  - name: FlatFileAllOrdersReportByLastUpdate
    description: Order & Item Level report
    config:
      materialized: incremental
      incremental_strategy: merge
      unique_key: ['purchase_date', 'amazon_order_id', 'asin', 'sku', '_seq_id']
      partition_by: { 'field': 'purchase_date', 'data_type': 'timestamp', 'granularity': 'day' }
      cluster_by: ['asin', 'sku', 'amazon_order_id']

  - name: SalesAndTrafficReportByChildASIN
    description: Provides sales & traffic at SKU level that we see in the Business Report in the UI
    config:
      materialized: incremental
      incremental_strategy: merge
      partition_by: { 'field': 'date', 'data_type': 'date' }
      cluster_by: ['parentAsin', 'childAsin']
      unique_key: ['date', 'parentAsin', 'childAsin','marketplaceId']

  - name: ListingOffersForASIN
    config:
      materialized: incremental
      incremental_strategy: merge
      partition_by: { 'field': 'RequeststartDate', 'data_type': 'timestamp', 'granularity': 'day' }
      cluster_by: ['ASIN', 'itemCondition']
      unique_key: ['ASIN', 'itemCondition']
